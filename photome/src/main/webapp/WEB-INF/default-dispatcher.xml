<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
               http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
               http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

    <!-- Enables the Spring MVC @Controller programming model -->
    <mvc:annotation-driven />
    <mvc:resources mapping="/resources/**" location="/resources" />

    <!-- Tiles ViewResolver
        <bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView" />
        <property name="order" value="1" />
        </bean>

        기존에 셋팅되어 있던 내용에 order속성을 추가한다.
        <bean id="jstlViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
        <property name="order" value="2" />
        </bean> -->

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="1000000" />
    </bean>

    <!-- <bean class="com.cosmos.common.controller.FileUploadController">
        <property name="formView" value="FileUploadForm" />
        <property name="successView" value="FileUploadSuccess" />
        Map a validator
        <property name="validator">
        <bean class="com.cosmos.common.FileUploadValidator" />
        </property>
        </bean> -->

    <!-- Register the Customer.properties -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="classpath:messages/message" />
    </bean>

    <!-- <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
        <props>
        <prop key="java.lang.Exception">error</prop>
        <prop key="javax.servlet.ServletException">error</prop>
        </props>
        </property>
        <property name="defaultErrorView" value="error" />
        </bean> -->

    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="mediaTypes">
            <map>
                <entry key="html" value="text/html" />
                <entry key="json" value="application/json" />
            </map>
        </property>
        <property name="viewResolvers">
            <list>
                <bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
                    <property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView" />
                    <property name="order" value="1" />
                </bean>
                <bean id="jstlViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
                    <property name="prefix" value="/WEB-INF/views/" />
                    <property name="suffix" value=".jsp" />
                    <property name="order" value="2" />
                </bean>
            </list>
        </property>
        <property name="defaultViews">
            <list>
                <bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
            </list>
        </property>
        <property name="order" value="2" />
    </bean>


    <!-- 위와 같이 설정해 놓으면, view호출시 tiles-def.xml에 해당 view가 정의(definition) 되어 있으면, tiles로 로 랜더링을 하고(id="tilesViewResolver")
        없으면 일반 view로 랜더링 한다.(id="viewResolver") -->
    <!-- Tiles 2 definition lists -->
    <!-- scope에 request를 넣지 않으면 단위테스트시 오류가 날수 있음. -->
    <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>classpath:tiles/**/*.tiles.xml</value>
            </list>
        </property>
    </bean>


</beans>